/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.Players;
import data.stats.PlayerStats;
import database.DataDealer;
import gui.listRenderers.ListRendererFactory;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Przemo
 */
public class PlayerVsPlayerStatsForm extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form PlayerVsPlayerStatsForm
     */
    public PlayerVsPlayerStatsForm() {
        initComponents();
        fillPlayersList();
    }

        private void fillPlayersList(){
        DefaultListModel lvp = new DefaultListModel();
        List lp = new DataDealer().readConditionedData(Players.class, "id>0");
        for(Object p: lp){
            if(p!=null){
                lvp.addElement(p);
            }
        }
        lstPlayers1.setModel(lvp);
        lstPlayers1.setCellRenderer( new ListRendererFactory().createListRendererFactory(Players.class));
        lstPlayers2.setModel(lvp);
        lstPlayers2.setCellRenderer( new ListRendererFactory().createListRendererFactory(Players.class));
        btnShow.addMouseListener(this);
    }
        
        private void showStats(){
            panResults.removeAll();
            panResults.setLayout(new BorderLayout());
        try {
            PlayerStatsPanel pp = new PlayerStatsPanel(new PlayerStats((Players)lstPlayers1.getSelectedValue(), (Players)lstPlayers2.getSelectedValue()));
            OddsAssesorPanel oddsPan = new OddsAssesorPanel(.01*pp.statistics.getPercentageOfGamesWon());
            pp.statistics.addChangeListener(oddsPan);
            panResults.add(pp, BorderLayout.CENTER);
            panResults.add(oddsPan, BorderLayout.SOUTH);
            panResults.revalidate();
            this.setSize(new Dimension(this.getWidth(), this.getHeight()+ oddsPan.getHeight()));
        } catch (Exception ex) {
            Logger.getLogger(PlayerVsPlayerStatsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labPlayers1 = new javax.swing.JLabel();
        labPlayers2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstPlayers1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPlayers2 = new javax.swing.JList();
        panResults = new javax.swing.JPanel();
        btnShow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labPlayers1.setText("Player 1");

        labPlayers2.setText("Player 2");

        lstPlayers1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lstPlayers1);

        lstPlayers2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstPlayers2);

        panResults.setBackground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout panResultsLayout = new javax.swing.GroupLayout(panResults);
        panResults.setLayout(panResultsLayout);
        panResultsLayout.setHorizontalGroup(
            panResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        panResultsLayout.setVerticalGroup(
            panResultsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        btnShow.setText("Show Statistics");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labPlayers1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labPlayers2)
                        .addGap(96, 96, 96))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addComponent(btnShow)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labPlayers1)
                    .addComponent(labPlayers2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnShow)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShow;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labPlayers1;
    private javax.swing.JLabel labPlayers2;
    private javax.swing.JList lstPlayers1;
    private javax.swing.JList lstPlayers2;
    private javax.swing.JPanel panResults;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent me) {
        if(me.getSource()==btnShow){
            showStats();
        }
    }

    @Override
    public void mousePressed(MouseEvent me) {
    }

    @Override
    public void mouseReleased(MouseEvent me) {
    }

    @Override
    public void mouseEntered(MouseEvent me) {
    }

    @Override
    public void mouseExited(MouseEvent me) {
    }


}
