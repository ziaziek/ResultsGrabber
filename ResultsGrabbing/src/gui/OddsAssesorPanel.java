/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.stats.OddsAssecor;
import data.stats.PlayerStats;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author Przemo
 */
public class OddsAssesorPanel extends javax.swing.JPanel implements KeyListener, ChangeListener {

    private double winProbability=0;
    /**
     * Creates new form OddsAssesorPanel
     */
    public OddsAssesorPanel() {
        initComponents();
    }

    public OddsAssesorPanel(double winProbability){
        this();      
        updateData(winProbability);
        txtGivenOdds.addKeyListener(this);
    }
    
    private void updateData(double winProbability){
        this.winProbability = winProbability;
        lblCalculatedOddsResult.setText(String.format("%.2f",OddsAssecor.getProperOdds(winProbability )));
        this.revalidate();
    }
    
    private void updateDeviation(double p){
        lblDeviationResult.setText(String.format("%.2f", p)+" %");
        Color c = Color.black;
        if(p<0){
            c = Color.RED;
        } else if(p>0){
            c = Color.GREEN;
        }
        lblDeviationResult.setForeground(c);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGivenOdds = new javax.swing.JLabel();
        txtGivenOdds = new javax.swing.JTextField();
        lblCalculatedOdds = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblCalculatedOddsResult = new javax.swing.JLabel();
        lblDeviation = new javax.swing.JLabel();
        lblDeviationResult = new javax.swing.JLabel();

        lblGivenOdds.setText("Given Odds");

        txtGivenOdds.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGivenOdds.setText("0.00");

        lblCalculatedOdds.setText("CalculatedOdds");

        lblCalculatedOddsResult.setText("0.00");
        lblCalculatedOddsResult.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        lblDeviation.setText("Deviation");

        lblDeviationResult.setText("0.00 %");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDeviation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDeviationResult))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblGivenOdds)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtGivenOdds, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCalculatedOdds)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblCalculatedOddsResult, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGivenOdds)
                    .addComponent(txtGivenOdds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCalculatedOdds)
                    .addComponent(lblCalculatedOddsResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeviation)
                    .addComponent(lblDeviationResult))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCalculatedOdds;
    private javax.swing.JLabel lblCalculatedOddsResult;
    private javax.swing.JLabel lblDeviation;
    private javax.swing.JLabel lblDeviationResult;
    private javax.swing.JLabel lblGivenOdds;
    private javax.swing.JTextField txtGivenOdds;
    // End of variables declaration//GEN-END:variables


    @Override
    public void keyTyped(KeyEvent ke) {
        
    }

    @Override
    public void keyPressed(KeyEvent ke) {
        
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        try {
            double p= Double.parseDouble(txtGivenOdds.getText().replace(",", "."));
            updateDeviation(OddsAssecor.getOddsDeviation(p, winProbability));
        } catch(Exception ex){
            //do nothing
        }
    }

    @Override
    public void stateChanged(ChangeEvent ce) {
        if( ce.getSource() instanceof PlayerStats){
            updateData(0.01*((PlayerStats)ce.getSource()).getPercentageOfGamesWon());
        }
    }
}
